{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useReducer } from \"react\";\nimport { db } from \"../firebase/config\";\nimport { collection, addDoc, Timestamp } from \"firebase/firestore\";\nconst initialState = {\n  loading: null,\n  error: null\n};\nconst insertReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        error: null\n      };\n    case \"INSERTED_DOC\":\n      return {\n        loading: false,\n        error: null\n      };\n    case \"ERROR\":\n      return {\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const useInsertDocument = docCollection => {\n  _s();\n  const [response, dispatch] = useReducer(insertReducer, initialState);\n\n  // deal with memory leak\n  const [cancelled, setCancelled] = useState(false);\n  const checkCancelBeforeDispatch = action => {\n    if (!cancelled) {\n      dispatch(action);\n    }\n  };\n  const insertDocument = async document => {\n    checkCancelBeforeDispatch({\n      type: \"LOADING\"\n    });\n    try {\n      const newDocument = {\n        ...document,\n        createdAt: Timestamp.now()\n      };\n      const insertedDocument = await addDoc(collection(db, docCollection), newDocument);\n      checkCancelBeforeDispatch({\n        type: \"INSERTED_DOC\",\n        payload: insertedDocument\n      });\n    } catch (error) {\n      checkCancelBeforeDispatch({\n        type: \"ERROR\",\n        payload: error.message\n      });\n    }\n  };\n  useEffect(() => {\n    return () => setCancelled(true);\n  }, []);\n  return {\n    insertDocument,\n    response\n  };\n};\n_s(useInsertDocument, \"aGpufD8as+miNYZKmGUYm2CUF6M=\");","map":{"version":3,"names":["useState","useEffect","useReducer","db","collection","addDoc","Timestamp","initialState","loading","error","insertReducer","state","action","type","payload","useInsertDocument","docCollection","_s","response","dispatch","cancelled","setCancelled","checkCancelBeforeDispatch","insertDocument","document","newDocument","createdAt","now","insertedDocument","message"],"sources":["C:/Users/Luiz.E.Costa/Desktop/Code/Curso/miniblog/src/hooks/useInsertDocument.js"],"sourcesContent":["import { useState, useEffect, useReducer } from \"react\";\nimport { db } from \"../firebase/config\";\nimport { collection, addDoc, Timestamp } from \"firebase/firestore\";\n\nconst initialState = {\n  loading: null,\n  error: null,\n};\n\nconst insertReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return { loading: true, error: null };\n    case \"INSERTED_DOC\":\n      return { loading: false, error: null };\n    case \"ERROR\":\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const useInsertDocument = (docCollection) => {\n  const [response, dispatch] = useReducer(insertReducer, initialState);\n\n  // deal with memory leak\n  const [cancelled, setCancelled] = useState(false);\n\n  const checkCancelBeforeDispatch = (action) => {\n    if (!cancelled) {\n      dispatch(action);\n    }\n  };\n\n  const insertDocument = async (document) => {\n    checkCancelBeforeDispatch({ type: \"LOADING\" });\n\n    try {\n      const newDocument = { ...document, createdAt: Timestamp.now() };\n\n      const insertedDocument = await addDoc(\n        collection(db, docCollection),\n        newDocument\n      );\n\n      checkCancelBeforeDispatch({\n        type: \"INSERTED_DOC\",\n        payload: insertedDocument,\n      });\n    } catch (error) {\n      checkCancelBeforeDispatch({ type: \"ERROR\", payload: error.message });\n    }\n  };\n\n  useEffect(() => {\n    return () => setCancelled(true);\n  }, []);\n\n  return { insertDocument, response };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,UAAU,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAElE,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACvC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QAAEL,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACvC,KAAK,cAAc;MACjB,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAK,CAAC;IACxC,KAAK,OAAO;MACV,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAClD;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGjB,UAAU,CAACQ,aAAa,EAAEH,YAAY,CAAC;;EAEpE;EACA,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMsB,yBAAyB,GAAIV,MAAM,IAAK;IAC5C,IAAI,CAACQ,SAAS,EAAE;MACdD,QAAQ,CAACP,MAAM,CAAC;IAClB;EACF,CAAC;EAED,MAAMW,cAAc,GAAG,MAAOC,QAAQ,IAAK;IACzCF,yBAAyB,CAAC;MAAET,IAAI,EAAE;IAAU,CAAC,CAAC;IAE9C,IAAI;MACF,MAAMY,WAAW,GAAG;QAAE,GAAGD,QAAQ;QAAEE,SAAS,EAAEpB,SAAS,CAACqB,GAAG;MAAG,CAAC;MAE/D,MAAMC,gBAAgB,GAAG,MAAMvB,MAAM,CACnCD,UAAU,CAACD,EAAE,EAAEa,aAAa,CAAC,EAC7BS,WAAW,CACZ;MAEDH,yBAAyB,CAAC;QACxBT,IAAI,EAAE,cAAc;QACpBC,OAAO,EAAEc;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACda,yBAAyB,CAAC;QAAET,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL,KAAK,CAACoB;MAAQ,CAAC,CAAC;IACtE;EACF,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd,OAAO,MAAMoB,YAAY,CAAC,IAAI,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEE,cAAc;IAAEL;EAAS,CAAC;AACrC,CAAC;AAACD,EAAA,CArCWF,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}