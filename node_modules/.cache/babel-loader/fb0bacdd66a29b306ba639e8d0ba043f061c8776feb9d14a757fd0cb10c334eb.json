{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useReducer } from \"react\";\nimport { db } from \"../firebase/config\";\nimport { updateDoc, doc } from \"firebase/firestore\";\nconst initialState = {\n  loading: null,\n  error: null\n};\nconst updateReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        loading: true,\n        error: null\n      };\n    case \"UPDATED_DOC\":\n      return {\n        loading: false,\n        error: null\n      };\n    case \"ERROR\":\n      return {\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const useUpdateDocument = docCollection => {\n  _s();\n  const [response, dispatch] = useReducer(updateReducer, initialState);\n\n  // deal with memory leak\n  const [cancelled, setCancelled] = useState(false);\n  const checkCancelBeforeDispatch = action => {\n    if (!cancelled) {\n      dispatch(action);\n    }\n  };\n  const updateDocument = async (uid, data) => {\n    checkCancelBeforeDispatch({\n      type: \"LOADING\"\n    });\n    try {\n      const docRef = await doc(db, docCollection, uid);\n      console.log(docRef);\n      const updatedDocument = await updateDoc(docRef, data);\n      console.log(updateDocument);\n      checkCancelBeforeDispatch({\n        type: \"UPDATED_DOC\",\n        payload: updatedDocument\n      });\n    } catch (error) {\n      console.log(error);\n      checkCancelBeforeDispatch({\n        type: \"ERROR\",\n        payload: error.message\n      });\n    }\n  };\n  useEffect(() => {\n    return () => setCancelled(true);\n  }, []);\n  return {\n    updateDocument,\n    response\n  };\n};\n_s(useUpdateDocument, \"aGpufD8as+miNYZKmGUYm2CUF6M=\");","map":{"version":3,"names":["useState","useEffect","useReducer","db","updateDoc","doc","initialState","loading","error","updateReducer","state","action","type","payload","useUpdateDocument","docCollection","_s","response","dispatch","cancelled","setCancelled","checkCancelBeforeDispatch","updateDocument","uid","data","docRef","console","log","updatedDocument","message"],"sources":["C:/Users/Luiz.E.Costa/Desktop/Code/Curso/miniblog/src/hooks/useUpdateDocument.js"],"sourcesContent":["import { useState, useEffect, useReducer } from \"react\";\nimport { db } from \"../firebase/config\";\nimport { updateDoc, doc } from \"firebase/firestore\";\n\nconst initialState = {\n  loading: null,\n  error: null,\n};\n\nconst updateReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return { loading: true, error: null };\n    case \"UPDATED_DOC\":\n      return { loading: false, error: null };\n    case \"ERROR\":\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const useUpdateDocument = (docCollection) => {\n  const [response, dispatch] = useReducer(updateReducer, initialState);\n\n  // deal with memory leak\n  const [cancelled, setCancelled] = useState(false);\n\n  const checkCancelBeforeDispatch = (action) => {\n    if (!cancelled) {\n      dispatch(action);\n    }\n  };\n\n  const updateDocument = async (uid, data) => {\n    checkCancelBeforeDispatch({ type: \"LOADING\" });\n\n    try {\n      const docRef = await doc(db, docCollection, uid);\n\n      console.log(docRef);\n\n      const updatedDocument = await updateDoc(docRef, data);\n\n      console.log(updateDocument);\n\n      checkCancelBeforeDispatch({\n        type: \"UPDATED_DOC\",\n        payload: updatedDocument,\n      });\n    } catch (error) {\n      console.log(error);\n      checkCancelBeforeDispatch({ type: \"ERROR\", payload: error.message });\n    }\n  };\n\n  useEffect(() => {\n    return () => setCancelled(true);\n  }, []);\n\n  return { updateDocument, response };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,SAAS,EAAEC,GAAG,QAAQ,oBAAoB;AAEnD,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACvC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QAAEL,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACvC,KAAK,aAAa;MAChB,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAK,CAAC;IACxC,KAAK,OAAO;MACV,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAClD;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,QAAQ,EAAEC,QAAQ,CAAC,GAAGhB,UAAU,CAACO,aAAa,EAAEH,YAAY,CAAC;;EAEpE;EACA,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMqB,yBAAyB,GAAIV,MAAM,IAAK;IAC5C,IAAI,CAACQ,SAAS,EAAE;MACdD,QAAQ,CAACP,MAAM,CAAC;IAClB;EACF,CAAC;EAED,MAAMW,cAAc,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,KAAK;IAC1CH,yBAAyB,CAAC;MAAET,IAAI,EAAE;IAAU,CAAC,CAAC;IAE9C,IAAI;MACF,MAAMa,MAAM,GAAG,MAAMpB,GAAG,CAACF,EAAE,EAAEY,aAAa,EAAEQ,GAAG,CAAC;MAEhDG,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MAEnB,MAAMG,eAAe,GAAG,MAAMxB,SAAS,CAACqB,MAAM,EAAED,IAAI,CAAC;MAErDE,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;MAE3BD,yBAAyB,CAAC;QACxBT,IAAI,EAAE,aAAa;QACnBC,OAAO,EAAEe;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdkB,OAAO,CAACC,GAAG,CAACnB,KAAK,CAAC;MAClBa,yBAAyB,CAAC;QAAET,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL,KAAK,CAACqB;MAAQ,CAAC,CAAC;IACtE;EACF,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd,OAAO,MAAMmB,YAAY,CAAC,IAAI,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEE,cAAc;IAAEL;EAAS,CAAC;AACrC,CAAC;AAACD,EAAA,CAvCWF,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}