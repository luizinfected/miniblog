{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { db } from '../firebase/config';\nimport { collection, query, orderBy, onSnapshot, where } from 'firebase/firestore';\nexport const useFetchDocuments = function (docCollection) {\n  _s();\n  let search = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let uid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const [documents, setDocuments] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  //deal with memory leak\n  const [cancelled, setCancelled] = useState(false);\n  useEffect(() => {\n    async function loadData() {\n      if (cancelled) {\n        return;\n      }\n      setLoading(true);\n      const collectionRef = await collection(db, docCollection);\n      try {\n        let q;\n\n        //busca\n\n        //dashboard\n\n        q = await query(collectionRef, orderBy('createdAt', 'desc'));\n        await onSnapshot(q, querySnapshot => {\n          setDocuments(querySnapshot.docs.map(doc => ({\n            id: doc.id,\n            ...doc.data()\n          })));\n        });\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n        setLoading(false);\n      }\n    }\n    loadData();\n  }, [docCollection, search, uid, cancelled]);\n  useEffect(() => {\n    return () => setCancelled(true);\n  }, []);\n  return {\n    documents,\n    loading,\n    error\n  };\n};\n_s(useFetchDocuments, \"oHQtMVeLQvU17FI2wc7iUGDhIAM=\");","map":{"version":3,"names":["useState","useEffect","db","collection","query","orderBy","onSnapshot","where","useFetchDocuments","docCollection","_s","search","arguments","length","undefined","uid","documents","setDocuments","error","setError","loading","setLoading","cancelled","setCancelled","loadData","collectionRef","q","querySnapshot","docs","map","doc","id","data","console","log","message"],"sources":["C:/Users/Luiz.E.Costa/Desktop/Code/Curso/miniblog/src/hooks/useFetchDocument.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { db } from '../firebase/config'\r\nimport {\r\n    collection,\r\n    query,\r\n    orderBy,\r\n    onSnapshot,\r\n    where,\r\n} from 'firebase/firestore'\r\n\r\nexport const useFetchDocuments = (docCollection, search = null, uid = null) => {\r\n\r\n    const [documents, setDocuments] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(null)\r\n\r\n    //deal with memory leak\r\n    const [cancelled, setCancelled] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        async function loadData() {\r\n            if (cancelled) {\r\n                return\r\n            }\r\n\r\n            setLoading(true)\r\n\r\n            const collectionRef = await collection(db, docCollection)\r\n\r\n            try {\r\n\r\n                let q\r\n\r\n                //busca\r\n\r\n                //dashboard\r\n\r\n                q = await query(collectionRef, orderBy('createdAt', 'desc'))\r\n                await onSnapshot(q, (querySnapshot) => {\r\n                    setDocuments(\r\n                        querySnapshot.docs.map((doc) => ({\r\n                            id: doc.id,\r\n                            ...doc.data(),\r\n                        }))\r\n                    )\r\n                })\r\n\r\n                setLoading(false)\r\n            } catch (error) {\r\n                console.log(error)\r\n                setError(error.message)\r\n                setLoading(false)\r\n            }\r\n        }\r\n\r\n        loadData()\r\n    }, [docCollection, search, uid, cancelled])\r\n\r\n    useEffect( () => {\r\n        return () => setCancelled(true)\r\n    },[])\r\n\r\n    return {documents,loading,error}\r\n}"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SACIC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,KAAK,QACF,oBAAoB;AAE3B,OAAO,MAAMC,iBAAiB,GAAG,SAAAA,CAACC,aAAa,EAAgC;EAAAC,EAAA;EAAA,IAA9BC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,IAAEG,GAAG,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAEtE,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IAEZ,eAAeuB,QAAQA,CAAA,EAAG;MACtB,IAAIF,SAAS,EAAE;QACX;MACJ;MAEAD,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMI,aAAa,GAAG,MAAMtB,UAAU,CAACD,EAAE,EAAEO,aAAa,CAAC;MAEzD,IAAI;QAEA,IAAIiB,CAAC;;QAEL;;QAEA;;QAEAA,CAAC,GAAG,MAAMtB,KAAK,CAACqB,aAAa,EAAEpB,OAAO,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QAC5D,MAAMC,UAAU,CAACoB,CAAC,EAAGC,aAAa,IAAK;UACnCV,YAAY,CACRU,aAAa,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,KAAM;YAC7BC,EAAE,EAAED,GAAG,CAACC,EAAE;YACV,GAAGD,GAAG,CAACE,IAAI;UACf,CAAC,CAAC,CAAC,CACN;QACL,CAAC,CAAC;QAEFX,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZe,OAAO,CAACC,GAAG,CAAChB,KAAK,CAAC;QAClBC,QAAQ,CAACD,KAAK,CAACiB,OAAO,CAAC;QACvBd,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;IAEAG,QAAQ,EAAE;EACd,CAAC,EAAE,CAACf,aAAa,EAAEE,MAAM,EAAEI,GAAG,EAAEO,SAAS,CAAC,CAAC;EAE3CrB,SAAS,CAAE,MAAM;IACb,OAAO,MAAMsB,YAAY,CAAC,IAAI,CAAC;EACnC,CAAC,EAAC,EAAE,CAAC;EAEL,OAAO;IAACP,SAAS;IAACI,OAAO;IAACF;EAAK,CAAC;AACpC,CAAC;AAAAR,EAAA,CAtDYF,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}