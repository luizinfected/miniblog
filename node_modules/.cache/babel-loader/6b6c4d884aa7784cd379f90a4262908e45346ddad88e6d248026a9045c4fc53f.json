{"ast":null,"code":"var _s = $RefreshSig$();\nimport { db } from '../firebase/config';\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile, signOut } from 'firebase/auth';\nimport { useState, useEffect } from 'react';\nexport const useAuthentication = () => {\n  _s();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(null);\n\n  //cleanup\n  //deal with memory leak\n  const [cancelled, setCancelled] = useState(false);\n  function checkIfIsCancelled() {\n    if (cancelled) {\n      return;\n    }\n  }\n  const auth = getAuth();\n  const createUser = async data => {\n    checkIfIsCancelled();\n    setLoading(true);\n    setError(null);\n    try {\n      const {\n        user\n      } = await createUserWithEmailAndPassword(auth, data.email, data.password);\n      await updateProfile(user, {\n        displayName: data.displayName\n      });\n      setLoading(false);\n      return user;\n    } catch (error) {\n      console.log(error.message);\n      console.log(typeof error.message);\n      let systemErrorMessage;\n      if (error.message.includes(\"password\")) {\n        systemErrorMessage = \"A senha precisa conter pelo menos 6 caracteres\";\n      } else if (error.message.includes('email-already')) {\n        systemErrorMessage = \"E-mail já cadastrado\";\n      } else {\n        systemErrorMessage = \"Ocorreu um erro, por favor tente mais tarde\";\n      }\n      setError(systemErrorMessage);\n    }\n  };\n\n  //logout\n\n  const logout = () => {\n    checkIfIsCancelled();\n    signOut(auth);\n  };\n\n  //login\n  const login = async data => {\n    checkIfIsCancelled();\n    setLoading(true);\n    setError(false);\n    try {\n      await signInWithEmailAndPassword(auth, data.email, data.password);\n    } catch (error) {\n      let systemErrorMessage;\n      if (error.message.includes(\"user-not-found\")) {\n        systemErrorMessage = \"Usuário não encontrado.\";\n      } else if (error.message.includes('wrong-password')) {\n        systemErrorMessage = \"Senha incorreta\";\n      } else {\n        systemErrorMessage = \"Ocorreu um erro, por favor tente mais tarde\";\n      }\n      setError(systemErrorMessage);\n    }\n  };\n  useEffect(() => setCancelled(true), []);\n  return {\n    auth,\n    createUser,\n    error,\n    loading,\n    logout\n  };\n};\n_s(useAuthentication, \"yWXVTuDKNAg0zWE6NWxrVR64XF0=\");","map":{"version":3,"names":["db","getAuth","createUserWithEmailAndPassword","signInWithEmailAndPassword","updateProfile","signOut","useState","useEffect","useAuthentication","_s","error","setError","loading","setLoading","cancelled","setCancelled","checkIfIsCancelled","auth","createUser","data","user","email","password","displayName","console","log","message","systemErrorMessage","includes","logout","login"],"sources":["C:/Users/luiz7/Desktop/Code/Curso 2023/miniblog/src/hooks/useAuthentication.js"],"sourcesContent":["import { db } from '../firebase/config'\r\n\r\nimport {\r\n    getAuth,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    updateProfile,\r\n    signOut\r\n} from 'firebase/auth'\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const useAuthentication = () => {\r\n\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(null)\r\n\r\n    //cleanup\r\n    //deal with memory leak\r\n    const [cancelled, setCancelled] = useState(false)\r\n    function checkIfIsCancelled() {\r\n        if (cancelled) {\r\n            return\r\n        }\r\n    }\r\n\r\n    const auth = getAuth()\r\n\r\n\r\n    const createUser = async (data) => {\r\n        checkIfIsCancelled()\r\n        setLoading(true)\r\n        setError(null)\r\n\r\n        try {\r\n            const { user } = await createUserWithEmailAndPassword(\r\n                auth,\r\n                data.email,\r\n                data.password\r\n            )\r\n\r\n            await updateProfile(user, {\r\n                displayName: data.displayName\r\n            })\r\n            setLoading(false)\r\n            return user\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error.message)\r\n            console.log(typeof error.message)\r\n\r\n            let systemErrorMessage\r\n\r\n            if (error.message.includes(\"password\")) {\r\n                systemErrorMessage = \"A senha precisa conter pelo menos 6 caracteres\"\r\n            } else if (error.message.includes('email-already')) {\r\n                systemErrorMessage = \"E-mail já cadastrado\"\r\n            } else {\r\n                systemErrorMessage = \"Ocorreu um erro, por favor tente mais tarde\"\r\n            }\r\n\r\n            setError(systemErrorMessage)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //logout\r\n\r\n    const logout = () =>{\r\n        checkIfIsCancelled()\r\n        signOut(auth)\r\n    }\r\n\r\n    //login\r\n    const login = async (data) =>{\r\n\r\n        checkIfIsCancelled()\r\n        setLoading(true)\r\n        setError(false)\r\n\r\n        try {\r\n            await signInWithEmailAndPassword(auth, data.email, data.password)\r\n        } catch (error) {\r\n            let systemErrorMessage\r\n\r\n            if (error.message.includes(\"user-not-found\")) {\r\n                systemErrorMessage = \"Usuário não encontrado.\"\r\n            } else if (error.message.includes('wrong-password')) {\r\n                systemErrorMessage = \"Senha incorreta\"\r\n            } else {\r\n                systemErrorMessage = \"Ocorreu um erro, por favor tente mais tarde\"\r\n            }\r\n\r\n            setError(systemErrorMessage)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => setCancelled(true), [])\r\n\r\n    return { auth, createUser, error, loading, logout }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}